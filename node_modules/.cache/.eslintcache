[{"D:\\organic\\src\\index.js":"1","D:\\organic\\src\\reportWebVitals.js":"2","D:\\organic\\src\\App.js":"3","D:\\organic\\src\\Home.jsx":"4","D:\\organic\\src\\Products.jsx":"5","D:\\organic\\src\\Blog.jsx":"6","D:\\organic\\src\\About.jsx":"7","D:\\organic\\src\\Contact.jsx":"8","D:\\organic\\src\\Navbar.jsx":"9"},{"size":363,"mtime":1623679227643,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":953,"mtime":1623678522467,"results":"13","hashOfConfig":"11"},{"size":1420,"mtime":1623665938813,"results":"14","hashOfConfig":"11"},{"size":2460,"mtime":1623677331480,"results":"15","hashOfConfig":"11"},{"size":3322,"mtime":1623677423956,"results":"16","hashOfConfig":"11"},{"size":3781,"mtime":1623679501554,"results":"17","hashOfConfig":"11"},{"size":2204,"mtime":1623679845815,"results":"18","hashOfConfig":"11"},{"size":3210,"mtime":1623680565028,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"10wirmh",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\organic\\src\\index.js",["41","42"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </>,\n  document.getElementById(\"root\")\n);\n",["43","44"],"D:\\organic\\src\\reportWebVitals.js",[],"D:\\organic\\src\\App.js",["45"],"import React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport Products from \"./Products\";\nimport Blog from \"./Blog\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\nimport Navbar from \"./Navbar\";\n\n{\n  /*import { Switch, Route, Redirect } from \"react-router-dom\";*/\n}\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      {/*<Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/Products\" component={Products} />\n        <Route exact path=\"/Blog\" component={Blog} />\n        <Route exact path=\"/About\" component={About} />\n        <Route exact path=\"/Contact\" component={Contact} />\n        <Redirect to=\"/\" />\n      </Switch>\n      */}\n      <Home />\n      <Products />\n      <Blog />\n      <About />\n      <Contact />\n    </>\n  );\n};\n\nexport default App;\n","D:\\organic\\src\\Home.jsx",[],"D:\\organic\\src\\Products.jsx",[],"D:\\organic\\src\\Blog.jsx",[],"D:\\organic\\src\\About.jsx",["46","47","48","49","50"],"D:\\organic\\src\\Contact.jsx",["51","52","53","54"],"D:\\organic\\src\\Navbar.jsx",["55"],{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":9},{"ruleId":"56","severity":1,"message":"60","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":14},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":12,"column":1,"nodeType":"67","messageId":"68","endLine":14,"endColumn":2},{"ruleId":"69","severity":1,"message":"70","line":18,"column":15,"nodeType":"71","endLine":23,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":27,"column":15,"nodeType":"71","endLine":32,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":36,"column":15,"nodeType":"71","endLine":41,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":45,"column":15,"nodeType":"71","endLine":50,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":53,"column":15,"nodeType":"71","endLine":58,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":18,"column":17,"nodeType":"71","endLine":18,"endColumn":49},{"ruleId":"72","severity":1,"message":"73","line":51,"column":21,"nodeType":"71","endLine":51,"endColumn":55},{"ruleId":"72","severity":1,"message":"73","line":54,"column":21,"nodeType":"71","endLine":54,"endColumn":58},{"ruleId":"72","severity":1,"message":"73","line":57,"column":21,"nodeType":"71","endLine":57,"endColumn":61},{"ruleId":"72","severity":1,"message":"73","line":12,"column":19,"nodeType":"71","endLine":12,"endColumn":55},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]